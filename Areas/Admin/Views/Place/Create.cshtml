@model PlaceCreateVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Place</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.Name" class="control-label"></label>
                <input asp-for="@Model.Name" class="form-control" />
                <span asp-validation-for="@Model.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Longitude" class="control-label"></label>
                <input asp-for="@Model.Longitude" class="form-control" id="longitude" />
            </div>
            <div class="form-group">
                <label asp-for="@Model.Latitude" class="control-label"></label>
                <input asp-for="@Model.Latitude" class="form-control" id="latitude" />
            </div>
            <div class="form-group">
                <br/>
                <input type="submit" onclick="getLocation()" value="Задать координаты автоматически" class="btn btn-info" />
                <input type="submit" value="Create" class="btn btn-primary" />
                <br />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    function getLocation() {
        if ("geolocation" in navigator) {
            navigator.geolocation.getCurrentPosition(function (position) {
                var latitudeValue = position.coords.latitude;
                var longitudeValue = position.coords.longitude;

                document.getElementById("longitude").value = longitudeValue;
                document.getElementById("latitude").value = latitudeValue;
            });
        } else {
            alert("Error");
        }
    }
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
